{%- liquid
  assign body_font_bold = settings.type_body_font | font_modify: 'weight', 'bold'
  assign body_font_italic = settings.type_body_font | font_modify: 'style', 'italic'
  assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'
%}

{% style %}
  {%- unless settings.body_custom_fonts_type -%}
    {{ settings.type_body_font | font_face: font_display: 'swap' }}
    {{ body_font_bold | font_face: font_display: 'swap' }}
    {{ body_font_italic | font_face: font_display: 'swap' }}
    {{ body_font_bold_italic | font_face: font_display: 'swap' }}
  {%- endunless -%}
  {%- unless settings.heading_custom_fonts_type  -%}
    {{ settings.type_header_font | font_face: font_display: 'swap' }}
  {%- endunless -%}
  {%- liquid
    assign heading_custom_fonts = settings.heading_custom_font_url
    assign heading_font_url_split = heading_custom_fonts | split: "&&"
    assign heading_font_weight_handle = settings.heading_custom_font_width_select
    assign heading_custom_font_family = heading_font_url_split[0]
    assign heading_custom_font_inner_split = heading_custom_font_family | split: "@"
    assign body_custom_fonts = settings.body_custom_fonts_url
    assign body_font_url_split = body_custom_fonts | split: "&&"
    assign body_font_weight_handle = settings.body_custom_font_width_select
    assign body_custom_font_family = body_font_url_split[0]
    assign body_custom_font_inner_split = body_custom_font_family | split: "@"
  -%}

  {%- if settings.body_custom_fonts_type -%}
    {% for body_font in body_font_url_split %}
        {%- assign body_font_inner_split = body_font | split: "@" %}
        @font-face {
           font-family: '{{ body_font_inner_split[2] }}';
           src: url('{{ body_font_inner_split[0] }}') format('woff');
           font-weight: {{ body_font_inner_split[1] }};
           font-display: swap;
           font-style: normal;
        }
    {% endfor %}

  {%- endif -%}

  {%- if settings.heading_custom_fonts_type -%}
    {% for index in heading_custom_font_inner_split %}
        {% if forloop.index == 1 %}
          {% assign heading_custom_font_family_url = index %}
        {% elsif forloop.index == 2  %}
          {% assign heading_custom_font_family_width = index %}
        {% elsif forloop.index == 3  %}
          {% assign heading_custom_font_family_name = index %}
        {% endif %}
    {% endfor %}

    {% for heading_font in heading_font_url_split %}
      {% assign heading_font_inner_split = heading_font | split: "@" %}
        @font-face {
           font-family: '{{ heading_font_inner_split[2] }}';
           src: url('{{ heading_font_inner_split[0] }}') format('woff');
           font-weight: {{ heading_font_inner_split[1] }};
           font-display: swap;
           font-style: normal;
        }
    {% endfor %}
  {%- endif -%}

    :root {
      {% if settings.body_custom_fonts_type -%}
        --font-body-family: {{ body_custom_font_inner_split[2] }}, {{ settings.type_body_font.fallback_families }};
        --font-body-weight: {{ body_font_weight_handle }};
      {% else -%}
        --font-body-family: {{ settings.type_body_font.family }}, {{ settings.type_body_font.fallback_families }};
        --font-body-style: {{ settings.type_body_font.style }};
        --font-body-weight: {{ settings.type_body_font.weight }};
        --font-body-weight-bold: {{ settings.type_body_font.weight | plus: 300 | at_most: 1000 }};
      {% endif -%}

      {% if settings.heading_custom_fonts_type -%}
        --font-heading-family: {{ heading_custom_font_family_name }}, {{ settings.type_body_font.fallback_families }};
        --font-heading-weight: {{ heading_font_weight_handle }};
      {% else -%}
        --font-heading-family: {{ settings.type_header_font.family }}, {{ settings.type_header_font.fallback_families }};
        --font-heading-style: {{ settings.type_header_font.style }};
        --font-heading-weight: {{ settings.type_header_font.weight }};
      {% endif -%}

      {% for scheme in settings.color_schemes -%}
        {% assign scheme_classes = scheme_classes | append: ', .color-' | append: scheme.id %}
        .color-{{ scheme.id }} {
            --color-background: {{ scheme.settings.background.red }},{{ scheme.settings.background.green }},{{ scheme.settings.background.blue }};
            {% if scheme.settings.background_gradient != empty -%}
              --gradient-background: {{ scheme.settings.background_gradient }};
            {% else -%}
              --gradient-background: {{ scheme.settings.background }};
            {% endif -%}
            --color-foreground: {{ scheme.settings.text.red }},{{ scheme.settings.text.green }},{{ scheme.settings.text.blue }};
            --solid-button-foreground: {{ scheme.settings.solid_button_label.red }},{{ scheme.settings.solid_button_label.green }},{{ scheme.settings.solid_button_label.blue }};
            --solid-button-background: {{ scheme.settings.solid_button.red }},{{ scheme.settings.solid_button.green }},{{ scheme.settings.solid_button.blue }};
            --button-outline: {{ scheme.settings.outline_color.red }},{{ scheme.settings.outline_color.green }},{{ scheme.settings.outline_color.blue }};
            --button-outline-label: {{ scheme.settings.outline_button_label.red }},{{ scheme.settings.outline_button_label.green }},{{ scheme.settings.outline_button_label.blue }};
            --hover-button-background: {{ scheme.settings.button_hover_bg.red }},{{ scheme.settings.button_hover_bg.green }},{{ scheme.settings.button_hover_bg.blue }};
            --hover-button-label: {{ scheme.settings.button_hover_label.red }},{{ scheme.settings.button_hover_label.green }},{{ scheme.settings.button_hover_label.blue }};
            --border-color: {{ scheme.settings.border.red }},{{ scheme.settings.border.green }},{{ scheme.settings.border.blue }};
            --quick-cart: {{ scheme.settings.quick_cart.red }},{{ scheme.settings.quick_cart.green }},{{ scheme.settings.quick_cart.blue }};
            --quick-cart-label: {{ scheme.settings.quick_cart_button_label.red }},{{ scheme.settings.quick_cart_button_label.green }},{{ scheme.settings.quick_cart_button_label.blue }};
            --social-bg: {{ scheme.settings.social_bg.red }},{{ scheme.settings.social_bg.green }},{{ scheme.settings.social_bg.blue }};
        }
      {% endfor -%}

      --font-body-size: {{ settings.body_font_size | divided_by: 100.0 }};
      --font-heading-size: {{ settings.heading_font_size | times: 1.0 | divided_by: settings.body_font_size }};
      --heading-letter-spacing: {{ settings.heading_letter_spacing }}px;
      --header-text-case: {{ settings.header_text_case }};

      --button-border-width: {{ settings.button_border_width }}px;
      --button-border-radius: {{ settings.button_border_radius }}px;
      --button-letter-spacing: {{ settings.button_letter_spacing }}px;
      --button-font-size: {{ settings.button_font_size | times: 1.0 | divided_by: settings.body_font_size }};
      --button-text-case: {{ settings.button_text_case }};

      --container-lg-width: {{ settings.container_lg_width | divided_by: 10 }}rem;
      --page-width: {{ settings.container_lg_width | divided_by: 10 }}rem;
      --container-fluid-offset: 2rem;
      --transition: all 0.3s ease 0s;
      --duration-long: 500ms;
    }

      *,
      *::before,
      *::after {
        box-sizing: inherit;
      }

      html {
        box-sizing: border-box;
        height: 100%;
        margin: 0;
        padding: 0;
        font-size: calc(var(--font-body-size) * 62.5%);
      }

      body {
        margin: 0;
        min-height: 100%;
        font-size: 1.5rem;
        letter-spacing: {{ settings.body_letter_spacing }}px;
        line-height: calc(1 + 0.8 / var(--font-body-size));
        font-family: var(--font-body-family);
        font-style: var(--font-body-style);
        font-weight: var(--font-body-weight);
        position: relative;
        visibility: visible;
        overflow-x: hidden;
      }
    @media only screen and (min-width: 992px){
        body {
          font-size: 1.6rem;
        }
    }
{% endstyle %}
